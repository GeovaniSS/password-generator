{
  "version": 3,
  "sources": ["../../../src/modules/generators.js", "../../../src/modules/generatePasswordForm.js", "../../../src/main.js"],
  "sourcesContent": ["const symbols = ',.;:><?|~^@!#$%&*()-_+={}[]/\"'\r\n\r\nconst randomNumber = (min, max) => Math.round(Math.random() * (max - min) + min)\r\nconst generateUpperCase = () => String.fromCharCode(randomNumber(65, 91))\r\nconst generateLowerCase = () =>  String.fromCharCode(randomNumber(97, 122))\r\nconst generateNumber = () => String.fromCharCode(randomNumber(48, 57))\r\nconst generateSymbol = () => symbols[randomNumber(0, symbols.length - 1)]\r\n\r\nexport default (max, upper, lower, number, symbol) => {\r\n  let password = ''\r\n  \r\n  for(let i = 0; i < max; i++) {\r\n    if(upper) password += generateUpperCase()\r\n    if(lower) password += generateLowerCase()\r\n    if(number) password += generateNumber()\r\n    if(symbol) password += generateSymbol()\r\n  }\r\n\r\n  return password.slice(0, max)\r\n}", "import generatePassword from './generators'\r\n\r\nconst displayPassword = document.querySelector('#password')\r\nconst generateIcon = document.querySelector('.generatePassIcon')\r\nconst generateBtn = document.querySelector('.generatePassBtn')\r\nconst copyToClipBoardIcon = document.querySelector('.copyToClipBoardIcon')\r\nconst maxCharacters = document.querySelector('#characters')\r\nconst upperCase = document.querySelector('#uppercase')\r\nconst lowerCase = document.querySelector('#lowercase')\r\nconst number = document.querySelector('#number')\r\nconst symbol = document.querySelector('#symbol')\r\n\r\nconst randomPassword = () => {\r\n  const randomPassword = generatePassword(\r\n    maxCharacters.value, \r\n    upperCase.checked,\r\n    lowerCase.checked,\r\n    number.checked, \r\n    symbol.checked\r\n  )\r\n\r\n  return randomPassword || 'Nada selecionado'\r\n}\r\n\r\nexport default () => {\r\n  generateIcon.addEventListener('click', () => displayPassword.value = randomPassword())\r\n  generateBtn.addEventListener('click', () => displayPassword.value = randomPassword())\r\n  copyToClipBoardIcon.addEventListener('click', () => {\r\n    navigator.permissions.query({name: \"clipboard-write\"})\r\n      .then(() => updateClipboard())\r\n  })\r\n}\r\n\r\nconst updateClipboard = () => {\r\n  navigator.clipboard.writeText(displayPassword.value)\r\n}\r\n", "import './assets/css/style.css';\r\n\r\nimport generatePasswordForm from './modules/generatePasswordForm'\r\ngeneratePasswordForm()"],
  "mappings": "MAAA,GAAM,GAAU,gCAEV,EAAe,CAAC,EAAK,IAAQ,KAAK,MAAM,KAAK,OAAO,EAAK,GAAM,GAAO,CAAG,EACzE,EAAoB,IAAM,OAAO,aAAa,EAAa,GAAI,EAAE,CAAC,EAClE,EAAoB,IAAO,OAAO,aAAa,EAAa,GAAI,GAAG,CAAC,EACpE,EAAiB,IAAM,OAAO,aAAa,EAAa,GAAI,EAAE,CAAC,EAC/D,EAAiB,IAAM,EAAQ,EAAa,EAAG,EAAQ,OAAS,CAAC,GAEhE,EAAQ,CAAC,EAAK,EAAO,EAAO,EAAQ,IAAW,CACpD,GAAI,GAAW,GAEf,OAAQ,GAAI,EAAG,EAAI,EAAK,IACtB,AAAG,GAAO,IAAY,EAAkB,GACrC,GAAO,IAAY,EAAkB,GACrC,GAAQ,IAAY,EAAe,GACnC,GAAQ,IAAY,EAAe,GAGxC,MAAO,GAAS,MAAM,EAAG,CAAG,CAC9B,ECjBA,GAAM,GAAkB,SAAS,cAAc,WAAW,EACpD,EAAe,SAAS,cAAc,mBAAmB,EACzD,EAAc,SAAS,cAAc,kBAAkB,EACvD,EAAsB,SAAS,cAAc,sBAAsB,EACnE,EAAgB,SAAS,cAAc,aAAa,EACpD,EAAY,SAAS,cAAc,YAAY,EAC/C,EAAY,SAAS,cAAc,YAAY,EAC/C,EAAS,SAAS,cAAc,SAAS,EACzC,EAAS,SAAS,cAAc,SAAS,EAEzC,EAAiB,IASd,AARgB,EACrB,EAAc,MACd,EAAU,QACV,EAAU,QACV,EAAO,QACP,EAAO,OACT,GAEyB,mBAGpB,EAAQ,IAAM,CACnB,EAAa,iBAAiB,QAAS,IAAM,EAAgB,MAAQ,EAAe,CAAC,EACrF,EAAY,iBAAiB,QAAS,IAAM,EAAgB,MAAQ,EAAe,CAAC,EACpF,EAAoB,iBAAiB,QAAS,IAAM,CAClD,UAAU,YAAY,MAAM,CAAC,KAAM,iBAAiB,CAAC,EAClD,KAAK,IAAM,EAAgB,CAAC,CACjC,CAAC,CACH,EAEM,EAAkB,IAAM,CAC5B,UAAU,UAAU,UAAU,EAAgB,KAAK,CACrD,EChCA,EAAqB",
  "names": []
}
